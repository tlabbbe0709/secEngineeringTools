| datamodel Web | spath 
| spath path=objects{}.fields{} output=v 
| spath path=objects{}.calculations{}.outputFields{} output=u 
| eval w=mvappend(v,u) 
| fields - _raw 
| fields modelName w
| mvexpand w 
| eval field=json_extract(w,"fieldName")
| table field
| join field
    [search `cim_Web_indexes` tag=web
| head 10000
| fieldsummary maxvals=15
| eventstats max(count) AS total 
| eval percent_coverage=round(count/total*100, 2) 
| table field, percent_coverage, distinct_count, total, values
| spath input=values 
| rename {}.value AS sample_values {}.count AS sample_count distinct_count AS distinct_value_count total AS total_events 
| fillnull value=0 percent_coverage, distinct_value_count, total_events]
| eval cimStatus=case(
    field=cached AND NOT match(cached,"1|0|true|false"),"Non-prescribed values found", 
    field=http_method AND NOT match(http_method,"GET|PUT,POST|DELETE|HEAD|OPTIONS|CONNECT|TRACE"),"Non-prescribed values found", 
    field=status AND NOT match(status,"100|101|102|200|201|202|203|204|205|206|207|208|226|300|301|302|303|304|305|306|307|308|400|401|402|403|404|405|406|407|408|409|410|411|412|413|414|415|416|417|422|423|424|426|428|429|431|500|501|502|503|504|505|506|507|508|510|511"),"Non-prescribed values found", 
    percent_coverage<90,"Less than 90% of events covered",
    1==1,"Okay")
| search cimStatus!="Okay" NOT field IN (dest_bunit, dest_category, dest_priority, src_bunit, src_priority, src_user_bunit, src_user_category, src_user_priority, user_bunit, user_category, user_priority)
| stats values(cimStatus) as cimStatus values(percent_coverage) as precent_coverage by field 